{"version":3,"sources":["serviceWorker.js","taxonomies/biomes/index.js","taxonomies/fauna/index.js","taxonomies/odinTaxonomy.js","taxonomies/antediluvianTaxonomy.js","taxonomies/index.js","schema/index.js","components/Input/SelectInput.js","components/Preferences/PreferencesForm.js","components/Preferences/PreferencesPanel.js","components/SystemDetails/SystemDetailsForm.js","helpers/portmanteauHelper.js","helpers/systemDetailsHelper.js","components/SystemDetails/SystemDetailsPanel.js","components/PlanetDetails/PlanetDetailsForm.js","helpers/planetDetailsHelper.js","components/PlanetDetails/PlanetDetailsPanel.js","components/FaunaDetails/FaunaDetailsForm.js","components/FaunaDetails/FaunaDetailsPanel.js","helpers/faunaDetailsHelper.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","process","href","origin","addEventListener","swUrl","concat","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","biomes","AVAILABLE_GENUS_LIST","AVAILABLE_TEMPERAMENT_LIST","odinTaxonomy","spectralClassMap","O","0","1","2","3","4","5","6","7","8","9","B","A","F","G","K","M","L","T","Y","E","odditiesMap","e","f","h","k","m","n","p","q","s","v","w","biomeMap","_biomeMap","Object","defineProperty","sentinelMap","faunaMap","floraMap","temperamentMap","_temperamentMap","antediluvianTaxonomy","antediluvianTaxonomy_biomeMap","antediluvianTaxonomy_temperamentMap","AVAILABLE_TAXONOMIES","_AVAILABLE_TAXONOMIES","getTaxonomy","taxonomyId","taxonomy","Error","defaults","preferences","__typename","systemDetails","regionName","spectralClass","distanceFromCenter","planetDetails","biome","sentinels","fauna","flora","isMoon","faunaDetails","genus","temperament","floraDetails","waypointDetails","structure","resolvers","SelectInput","_ref","controlId","label","options","value","onChange","react_default","a","createElement","FormGroup","Col","componentClass","ControlLabel","xs","FormControl","map","option","key","handleFieldChange","curry","update","field","target","PreferencesForm","Form","Input_SelectInput","keys","PREFERENCES_QUERY","gql","_templateObject","updatePreferences","client","writeData","data","objectSpread","PreferencesPanel","react_apollo_browser_umd","query","_ref2","_ref2$data","loading","Panel","bsStyle","Heading","Body","Preferences_PreferencesForm","renderPanel","SystemDetailsForm","_this$props","this","props","horizontal","type","placeholder","InputGroup","Addon","Component","isFirstWord","wordIndex","isLastWord","words","length","filterCloseToStart","indexList","filter","index","filterCloseToEnd","word","appendIfVowel","vowelList","character","toConsumableArray","isVowel","findPossibleBreakpointLists","flow","split","characterList","reduce","findValidBreakpointLists","wordList","identity","generateWordPartListForMiddleWord","combinations","combinationList","combination","filteredCombinationList","combinationStart","generateWordPartLists","breakpointLists","breakpointList","breakpointListIndex","breakpoint","Infinity","generateCombinationList","lists","combinationListNested","generateCombinationListNested","toArray","list","otherLists","slice","arguments","undefined","flattenDepth","appendToPortmanteau","portmanteau","_ref3","_ref4","slicedToArray","wordPartStartIndex","wordPartEndIndex","wordPart","substring","appendTrimmedWord","generatePortmanteau","seed","randomGenerator","random","create","portmanteauList","wordListPrepared","toLower","wordPartLists","wordPartCombinationList","wordPartCombination","uniq","generatePortmanteauList","range","SPECTRAL_CLASS_REGEXP","parseSpectralClass","test","_SPECTRAL_CLASS_REGEX","exec","_SPECTRAL_CLASS_REGEX2","starClass","starTemperature","oddities","validateSystemDetails","validRegionName","validateRegionName","validSpectralClass","validateSpectralClass","_parseSpectralClass","isClassValid","areOdditiesValid","oddity","generateSystemNameShort","_parseSpectralClass2","classMappedTo","nameShort","upperFirst","SYSTEM_DETAILS_QUERY","SystemDetailsPanel_templateObject","updateSystemDetails","isValid","SystemDetails_SystemDetailsForm","assign","Footer","oddityNameParts","join","generateSystemName","SystemDetailsPanel","handleCheckboxChange","checked","PlanetDetailsForm","levels","BIOMES","Checkbox","validatePlanetDetails","isBiomeMapped","isSentinelsMapped","isFaunaMapped","isFloraMapped","generatePlanetNameShort","systemName","biomeName","PLANET_DETAILS_QUERY","PlanetDetailsPanel_templateObject","updatePlanetDetails","PlanetDetails_PlanetDetailsForm","planetNameOtherPart","isMoonNamePart","generatePlanetName","PlanetDetailsPanel","FaunaDetailsForm","FAUNA_DETAILS_QUERY","FaunaDetailsPanel_templateObject","updateFaunaDetails","isGenusAvailable","isTemperamentMapped","validateFaunaDetails","FaunaDetails_FaunaDetailsForm","planetName","temperamentName","generateFaunaName","FaunaDetailsPanel","App","Jumbotron","Grid","md","rel","Row","className","Preferences_PreferencesPanel","lg","SystemDetails_SystemDetailsPanel","PlanetDetails_PlanetDetailsPanel","FaunaDetails_FaunaDetailsPanel","cache","InMemoryCache","storage","localStorage","persistCache","render","ApolloClient","link","withClientState","typeDefs","components_App","document","getElementById","registerServiceWorker"],"mappings":"6HAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAIC,SAASC,EAASC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,GAAwBR,OAAOC,SAASQ,MACpDC,SAAWV,OAAOC,SAASS,OAIvC,OAGFV,OAAOW,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAC,OAAML,GAAN,sBAEPV,IAgEV,SAAiCc,EAAOP,GAEtCS,MAAMF,GACHG,KAAK,SAAAC,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5Cf,UAAUgB,cAAcC,MAAMR,KAAK,SAAAS,GACjCA,EAAaC,aAAaV,KAAK,WAC7Bf,OAAOC,SAASyB,aAKpBC,EAAgBf,EAAOP,KAG1BuB,MAAM,WACLC,QAAQC,IACN,mEArFAC,CAAwBnB,EAAOP,GAI/BC,UAAUgB,cAAcC,MAAMR,KAAK,WACjCc,QAAQC,IACN,+GAMJH,EAAgBf,EAAOP,MAM/B,SAASsB,EAAgBf,EAAOP,GAC9BC,UAAUgB,cACPlB,SAASQ,GACTG,KAAK,SAAAS,GACJA,EAAaQ,cAAgB,WAC3B,IAAMC,EAAmBT,EAAaU,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf9B,UAAUgB,cAAce,YAI1BR,QAAQC,IACN,gHAKEzB,GAAUA,EAAOiC,UACnBjC,EAAOiC,SAASd,KAMlBK,QAAQC,IAAI,sCAGRzB,GAAUA,EAAOkC,WACnBlC,EAAOkC,UAAUf,UAO5BI,MAAM,SAAAY,GACLX,QAAQW,MAAM,4CAA6CA,kECvFlDC,EAAA,CATW,OACE,SACC,UACD,SACE,WACF,SACD,QACK,cCyBnBC,EAAuB,CA7BJ,aACD,YACD,WACD,UACC,WACC,YACA,YACG,eACL,UACA,UACE,YACA,YACH,SACH,MACA,MAGM,YACD,WACG,cACJ,UAGA,UACA,UACC,UACG,eAmEpBC,EAA6B,CApCR,SACI,aACD,YACD,WACD,UACH,OACA,OACI,WACH,QACI,YACA,YACE,cACL,SACC,UACA,UACG,aACH,UACD,SACG,YACF,UACC,UACJ,OACE,SACH,MACK,WACA,WACE,aACL,QACM,cACE,gBACA,gBACL,WACD,UACC,YCoLrBC,EAAA,CACbC,iBAnOuB,CACvBC,EAAG,CACDC,EAAG,QACHC,EAAG,QACHC,EAAG,SACHC,EAAG,SACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QACHC,EAAG,SAELC,EAAG,CACDV,EAAG,SACHC,EAAG,SACHC,EAAG,QACHC,EAAG,QACHC,EAAG,SACHC,EAAG,SACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,SAELE,EAAG,CACDX,EAAG,OACHC,EAAG,OACHC,EAAG,YACHC,EAAG,YACHC,EAAG,SACHC,EAAG,SACHC,EAAG,QACHC,EAAG,QACHC,EAAG,WACHC,EAAG,YAELG,EAAG,CACDZ,EAAG,QACHC,EAAG,QACHC,EAAG,UACHC,EAAG,UACHC,EAAG,SACHC,EAAG,SACHC,EAAG,YACHC,EAAG,YACHC,EAAG,SACHC,EAAG,UAELI,EAAG,CACDb,EAAG,KACHC,EAAG,KACHC,EAAG,UACHC,EAAG,UACHC,EAAG,YACHC,EAAG,YACHC,EAAG,OACHC,EAAG,OACHC,EAAG,QACHC,EAAG,SAELK,EAAG,CACDd,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,aACHC,EAAG,aACHC,EAAG,WACHC,EAAG,WACHC,EAAG,MACHC,EAAG,OAELM,EAAG,CACDf,EAAG,UACHC,EAAG,UACHC,EAAG,QACHC,EAAG,QACHC,EAAG,SACHC,EAAG,SACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACHC,EAAG,QAELO,EAAG,CACDhB,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,OACHC,EAAG,OACHC,EAAG,WACHC,EAAG,WACHC,EAAG,QACHC,EAAG,SAELQ,EAAG,CACDjB,EAAG,OACHC,EAAG,OACHC,EAAG,UACHC,E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","file":"static/js/main.26c94bb0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const BIOME_LUSH = \"Lush\";\r\nexport const BIOME_BARREN = \"Barren\";\r\nexport const BIOME_AIRLESS = \"Airless\";\r\nexport const BIOME_EXOTIC = \"Exotic\";\r\nexport const BIOME_SCORCHED = \"Scorched\";\r\nexport const BIOME_FROZEN = \"Frozen\";\r\nexport const BIOME_TOXIC = \"Toxic\";\r\nexport const BIOME_IRRADIATED = \"Irradiated\";\r\n\r\nexport default [\r\n  BIOME_LUSH,\r\n  BIOME_BARREN,\r\n  BIOME_AIRLESS,\r\n  BIOME_EXOTIC,\r\n  BIOME_SCORCHED,\r\n  BIOME_FROZEN,\r\n  BIOME_TOXIC,\r\n  BIOME_IRRADIATED\r\n];\r\n","// GENUS\r\n\r\n// Terrestrial\r\nexport const GENUS_TETRACERIS = \"Tetraceris\";\r\nexport const GENUS_REOCOCCYX = \"Reococcyx\";\r\nexport const GENUS_RAGNIFAE = \"Rangifae\";\r\nexport const GENUS_THEROMA = \"Theroma\";\r\nexport const GENUS_PROCAVYA = \"Procavya\";\r\nexport const GENUS_CONOKINIS = \"Conokinis\";\r\nexport const GENUS_UNGULATIS = \"Ungulatis\";\r\nexport const GENUS_HEXUNGULATIS = \"Hexungulatis\";\r\nexport const GENUS_FELIDAE = \"Felidae\";\r\nexport const GENUS_FELIHEX = \"Felihex\";\r\nexport const GENUS_ANASTOMUS = \"Anastomus\";\r\nexport const GENUS_TYRANOCAE = \"Tyranocae\";\r\nexport const GENUS_MOGARA = \"Mogara\";\r\nexport const GENUS_LOK = \"Lok\";\r\nexport const GENUS_BOS = \"Bos\";\r\n\r\n// Aquatic\r\nexport const GENUS_ICTALORIS = \"Ictaloris\";\r\nexport const GENUS_PRIONACE = \"Prionace\";\r\nexport const GENUS_PRIONACEFDA = \"Prionacefda\";\r\nexport const GENUS_UNKNOWN = \"Unknown\";\r\n\r\n// Aerial\r\nexport const GENUS_AGNELIS = \"Agnelis\";\r\nexport const GENUS_OXYACTA = \"Oxyacta\";\r\nexport const GENUS_CYCROMYS = \"Cycroms\";\r\nexport const GENUS_RHOPALOCERA = \"Rhopalocera\";\r\n\r\nexport const DEFAULT_GENUS = GENUS_FELIDAE;\r\nexport const AVAILABLE_GENUS_LIST = [\r\n  GENUS_TETRACERIS,\r\n  GENUS_REOCOCCYX,\r\n  GENUS_RAGNIFAE,\r\n  GENUS_THEROMA,\r\n  GENUS_PROCAVYA,\r\n  GENUS_CONOKINIS,\r\n  GENUS_UNGULATIS,\r\n  GENUS_HEXUNGULATIS,\r\n  GENUS_FELIDAE,\r\n  GENUS_FELIHEX,\r\n  GENUS_ANASTOMUS,\r\n  GENUS_TYRANOCAE,\r\n  GENUS_MOGARA,\r\n  GENUS_LOK,\r\n  GENUS_BOS,\r\n  GENUS_ICTALORIS,\r\n  GENUS_PRIONACE,\r\n  GENUS_PRIONACEFDA,\r\n  GENUS_UNKNOWN,\r\n  GENUS_AGNELIS,\r\n  GENUS_OXYACTA,\r\n  GENUS_CYCROMYS,\r\n  GENUS_RHOPALOCERA\r\n];\r\n\r\n// TEMPERAMENT\r\n\r\nexport const TEMPERAMENT_ACTIVE = \"Active\";\r\nexport const TEMPERAMENT_AMBULATORY = \"Ambulatory\";\r\nexport const TEMPERAMENT_AGGRESIVE = \"Aggresive\";\r\nexport const TEMPERAMENT_AMENABLE = \"Amenable\";\r\nexport const TEMPERAMENT_ANXIOUS = \"Anxious\";\r\nexport const TEMPERAMENT_BOLD = \"Bold\";\r\nexport const TEMPERAMENT_CALM = \"Calm\";\r\nexport const TEMPERAMENT_CAUTIOUS = \"Cautious\";\r\nexport const TEMPERAMENT_CRUEL = \"Cruel\";\r\nexport const TEMPERAMENT_DANGEROUS = \"Dangerous\";\r\nexport const TEMPERAMENT_DEFENSIVE = \"Defensive\";\r\nexport const TEMPERAMENT_DISTINCTIVE = \"Distinctive\";\r\nexport const TEMPERAMENT_DOCILE = \"Docile\";\r\nexport const TEMPERAMENT_ERRATIC = \"Erratic\";\r\nexport const TEMPERAMENT_FEARFUL = \"Fearful\";\r\nexport const TEMPERAMENT_HIBERNATOR = \"Hibernator\";\r\nexport const TEMPERAMENT_HOSTILE = \"Hostile\";\r\nexport const TEMPERAMENT_HUNTER = \"Hunter\";\r\nexport const TEMPERAMENT_MIGRATORY = \"Migratory\";\r\nexport const TEMPERAMENT_PASSIVE = \"Passive\";\r\nexport const TEMPERAMENT_PREDATOR = \"Predtor\";\r\nexport const TEMPERAMENT_PREY = \"Prey\";\r\nexport const TEMPERAMENT_SEDATE = \"Sedate\";\r\nexport const TEMPERAMENT_SHY = \"Shy\";\r\nexport const TEMPERAMENT_SKITTISH = \"Skittish\";\r\nexport const TEMPERAMENT_STALKING = \"Stalking\";\r\nexport const TEMPERAMENT_SUBMISSIVE = \"Submissive\";\r\nexport const TEMPERAMENT_TIMID = \"Timid\";\r\nexport const TEMPERAMENT_UNCONCERNED = \"Unconcerned\";\r\nexport const TEMPERAMENT_UNINTELLIGENT = \"Unintelligent\";\r\nexport const TEMPERAMENT_UNPREDICTABLE = \"Unpredictable\";\r\nexport const TEMPERAMENT_VISCIOUS = \"Viscious\";\r\nexport const TEMPERAMENT_VIOLENT = \"Violent\";\r\nexport const TEMPERAMENT_VOLATILE = \"Volatile\";\r\n\r\nexport const DEFAULT_TEMPERAMENT = TEMPERAMENT_ACTIVE;\r\nexport const AVAILABLE_TEMPERAMENT_LIST = [\r\n  TEMPERAMENT_ACTIVE,\r\n  TEMPERAMENT_AMBULATORY,\r\n  TEMPERAMENT_AGGRESIVE,\r\n  TEMPERAMENT_AMENABLE,\r\n  TEMPERAMENT_ANXIOUS,\r\n  TEMPERAMENT_BOLD,\r\n  TEMPERAMENT_CALM,\r\n  TEMPERAMENT_CAUTIOUS,\r\n  TEMPERAMENT_CRUEL,\r\n  TEMPERAMENT_DANGEROUS,\r\n  TEMPERAMENT_DEFENSIVE,\r\n  TEMPERAMENT_DISTINCTIVE,\r\n  TEMPERAMENT_DOCILE,\r\n  TEMPERAMENT_ERRATIC,\r\n  TEMPERAMENT_FEARFUL,\r\n  TEMPERAMENT_HIBERNATOR,\r\n  TEMPERAMENT_HOSTILE,\r\n  TEMPERAMENT_HUNTER,\r\n  TEMPERAMENT_MIGRATORY,\r\n  TEMPERAMENT_PASSIVE,\r\n  TEMPERAMENT_PREDATOR,\r\n  TEMPERAMENT_PREY,\r\n  TEMPERAMENT_SEDATE,\r\n  TEMPERAMENT_SHY,\r\n  TEMPERAMENT_SKITTISH,\r\n  TEMPERAMENT_STALKING,\r\n  TEMPERAMENT_SUBMISSIVE,\r\n  TEMPERAMENT_TIMID,\r\n  TEMPERAMENT_UNCONCERNED,\r\n  TEMPERAMENT_UNINTELLIGENT,\r\n  TEMPERAMENT_UNPREDICTABLE,\r\n  TEMPERAMENT_VISCIOUS,\r\n  TEMPERAMENT_VIOLENT,\r\n  TEMPERAMENT_VOLATILE\r\n];\r\n","import {\r\n  BIOME_LUSH,\r\n  BIOME_BARREN,\r\n  BIOME_AIRLESS,\r\n  BIOME_EXOTIC,\r\n  BIOME_SCORCHED,\r\n  BIOME_FROZEN,\r\n  BIOME_TOXIC,\r\n  BIOME_IRRADIATED\r\n} from \"./biomes\";\r\nimport {\r\n  TEMPERAMENT_ACTIVE,\r\n  TEMPERAMENT_AMBULATORY,\r\n  TEMPERAMENT_AGGRESIVE,\r\n  TEMPERAMENT_AMENABLE,\r\n  TEMPERAMENT_ANXIOUS,\r\n  TEMPERAMENT_BOLD,\r\n  TEMPERAMENT_CALM,\r\n  TEMPERAMENT_CAUTIOUS,\r\n  TEMPERAMENT_CRUEL,\r\n  TEMPERAMENT_DANGEROUS,\r\n  TEMPERAMENT_DEFENSIVE,\r\n  TEMPERAMENT_DISTINCTIVE,\r\n  TEMPERAMENT_DOCILE,\r\n  TEMPERAMENT_ERRATIC,\r\n  TEMPERAMENT_FEARFUL,\r\n  TEMPERAMENT_HIBERNATOR,\r\n  TEMPERAMENT_HOSTILE,\r\n  TEMPERAMENT_HUNTER,\r\n  TEMPERAMENT_MIGRATORY,\r\n  TEMPERAMENT_PASSIVE,\r\n  TEMPERAMENT_PREDATOR,\r\n  TEMPERAMENT_PREY,\r\n  TEMPERAMENT_SEDATE,\r\n  TEMPERAMENT_SHY,\r\n  TEMPERAMENT_SKITTISH,\r\n  TEMPERAMENT_STALKING,\r\n  TEMPERAMENT_SUBMISSIVE,\r\n  TEMPERAMENT_TIMID,\r\n  TEMPERAMENT_UNCONCERNED,\r\n  TEMPERAMENT_UNINTELLIGENT,\r\n  TEMPERAMENT_UNPREDICTABLE,\r\n  TEMPERAMENT_VISCIOUS,\r\n  TEMPERAMENT_VIOLENT,\r\n  TEMPERAMENT_VOLATILE\r\n} from \"./fauna\";\r\n\r\nconst spectralClassMap = {\r\n  O: {\r\n    0: \"horus\",\r\n    1: \"horus\",\r\n    2: \"vishnu\",\r\n    3: \"vishnu\",\r\n    4: \"hera\",\r\n    5: \"hera\",\r\n    6: \"lir\",\r\n    7: \"lir\",\r\n    8: \"njord\",\r\n    9: \"njord\"\r\n  },\r\n  B: {\r\n    0: \"hathor\",\r\n    1: \"hathor\",\r\n    2: \"shiva\",\r\n    3: \"shiva\",\r\n    4: \"athena\",\r\n    5: \"athena\",\r\n    6: \"boann\",\r\n    7: \"boann\",\r\n    8: \"frigg\",\r\n    9: \"frigg\"\r\n  },\r\n  A: {\r\n    0: \"ptah\",\r\n    1: \"ptah\",\r\n    2: \"saraswati\",\r\n    3: \"saraswati\",\r\n    4: \"apollo\",\r\n    5: \"apollo\",\r\n    6: \"epona\",\r\n    7: \"epona\",\r\n    8: \"heimdall\",\r\n    9: \"heimdall\"\r\n  },\r\n  F: {\r\n    0: \"Khons\",\r\n    1: \"Khons\",\r\n    2: \"Krishna\",\r\n    3: \"Krishna\",\r\n    4: \"Hermes\",\r\n    5: \"Hermes\",\r\n    6: \"Cernunnos\",\r\n    7: \"Cernunnos\",\r\n    8: \"Baldur\",\r\n    9: \"Baldur\"\r\n  },\r\n  G: {\r\n    0: \"Ra\",\r\n    1: \"Ra\",\r\n    2: \"Ganesha\",\r\n    3: \"Ganesha\",\r\n    4: \"Aphrodite\",\r\n    5: \"Aphrodite\",\r\n    6: \"Lugh\",\r\n    7: \"Lugh\",\r\n    8: \"Mimir\",\r\n    9: \"Mimir\"\r\n  },\r\n  K: {\r\n    0: \"Bast\",\r\n    1: \"Bast\",\r\n    2: \"Agni\",\r\n    3: \"Agni\",\r\n    4: \"Hephaestus\",\r\n    5: \"Hephaestus\",\r\n    6: \"Teutates\",\r\n    7: \"Teutates\",\r\n    8: \"Tyr\",\r\n    9: \"Tyr\"\r\n  },\r\n  M: {\r\n    0: \"Sekhmet\",\r\n    1: \"Sekhmet\",\r\n    2: \"Durga\",\r\n    3: \"Durga\",\r\n    4: \"Hestia\",\r\n    5: \"Hestia\",\r\n    6: \"Aodh\",\r\n    7: \"Aodh\",\r\n    8: \"Thor\",\r\n    9: \"Thor\"\r\n  },\r\n  L: {\r\n    0: \"Thoth\",\r\n    1: \"Thoth\",\r\n    2: \"Nakul\",\r\n    3: \"Nakul\",\r\n    4: \"Ares\",\r\n    5: \"Ares\",\r\n    6: \"Morrigan\",\r\n    7: \"Morrigan\",\r\n    8: \"Sigyn\",\r\n    9: \"Sigyn\"\r\n  },\r\n  T: {\r\n    0: \"Amon\",\r\n    1: \"Amon\",\r\n    2: \"Parvati\",\r\n    3: \"Parvati\",\r\n    4: \"Poseidon\",\r\n    5: \"Poseidon\",\r\n    6: \"Druantia\",\r\n    7: \"Druantia\",\r\n    8: \"Nerthus\",\r\n    9: \"Nerthus\"\r\n  },\r\n  Y: {\r\n    0: \"Seth\",\r\n    1: \"Seth\",\r\n    2: \"Kali\",\r\n    3: \"Kali\",\r\n    4: \"Zeus\",\r\n    5: \"Zeus\",\r\n    6: \"Anu\",\r\n    7: \"Anu\",\r\n    8: \"Audhumla\",\r\n    9: \"Audhumla\"\r\n  },\r\n  E: {\r\n    0: \"Isis\",\r\n    1: \"Isis\",\r\n    2: \"Matangi\",\r\n    3: \"Matangi\",\r\n    4: \"Demeter\",\r\n    5: \"Demeter\",\r\n    6: \"Ce-aehd\",\r\n    7: \"Ce-aehd\",\r\n    8: \"Sif\",\r\n    9: \"Sif\"\r\n  }\r\n};\r\n\r\nconst odditiesMap = {\r\n  e: \"ei\",\r\n  f: \"ef\",\r\n  h: \"ah\",\r\n  k: \"ak\",\r\n  m: \"im\",\r\n  n: \"in\",\r\n  p: \"op\",\r\n  q: \"oq\",\r\n  s: \"us\",\r\n  v: \"yv\",\r\n  w: \"uw\"\r\n};\r\n\r\nconst biomeMap = {\r\n  [BIOME_LUSH]: \"himnariki\",\r\n  [BIOME_BARREN]: \"proskadur\",\r\n  [BIOME_AIRLESS]: \"yfirgefinn\",\r\n  [BIOME_EXOTIC]: \"framandi\",\r\n  [BIOME_SCORCHED]: \"brenndu\",\r\n  [BIOME_FROZEN]: \"fryst\",\r\n  [BIOME_TOXIC]: \"eiturefni\",\r\n  [BIOME_IRRADIATED]: \"geislad\"\r\n};\r\n\r\nconst sentinelMap = {\r\n  1: \"hlutlaus\",\r\n  2: \"slaka\",\r\n  3: \"stadall\",\r\n  4: \"ahugavert\",\r\n  5: \"aedi\",\r\n  6: \"arasargjarn\"\r\n};\r\n\r\nconst faunaMap = {\r\n  1: \"fjarverandi\",\r\n  2: \"oalgengt\",\r\n  3: \"venjulegt\",\r\n  4: \"tid\",\r\n  5: \"nog\",\r\n  6: \"fullt\"\r\n};\r\n\r\nconst floraMap = {\r\n  1: \"engin\",\r\n  2: \"venjulegt\",\r\n  3: \"milli\",\r\n  4: \"naegur\",\r\n  5: \"orlatur\",\r\n  6: \"rikur\"\r\n};\r\n\r\nconst temperamentMap = {\r\n  [TEMPERAMENT_ACTIVE]: \"ull\",\r\n  [TEMPERAMENT_AMBULATORY]: \"freyja\",\r\n  [TEMPERAMENT_AGGRESIVE]: \"mani\",\r\n  [TEMPERAMENT_AMENABLE]: \"saga\",\r\n  [TEMPERAMENT_ANXIOUS]: \"mimir\",\r\n  [TEMPERAMENT_BOLD]: \"meili\",\r\n  [TEMPERAMENT_CALM]: \"bil\",\r\n  [TEMPERAMENT_CAUTIOUS]: \"sol\",\r\n  [TEMPERAMENT_CRUEL]: \"fulla\",\r\n  [TEMPERAMENT_DANGEROUS]: \"hretha\",\r\n  [TEMPERAMENT_DEFENSIVE]: \"eir\",\r\n  [TEMPERAMENT_DISTINCTIVE]: \"magni\",\r\n  [TEMPERAMENT_DOCILE]: \"irpa\",\r\n  [TEMPERAMENT_ERRATIC]: \"lofn\",\r\n  [TEMPERAMENT_FEARFUL]: \"narvi\",\r\n  [TEMPERAMENT_HIBERNATOR]: \"idun\",\r\n  [TEMPERAMENT_HOSTILE]: \"zisa\",\r\n  [TEMPERAMENT_HUNTER]: \"odin\",\r\n  [TEMPERAMENT_MIGRATORY]: \"rig\",\r\n  [TEMPERAMENT_PASSIVE]: \"day\",\r\n  [TEMPERAMENT_PREDATOR]: \"vor\",\r\n  [TEMPERAMENT_PREY]: \"var\",\r\n  [TEMPERAMENT_SEDATE]: \"saxnot\",\r\n  [TEMPERAMENT_SHY]: \"hod\",\r\n  [TEMPERAMENT_SKITTISH]: \"freyr\",\r\n  [TEMPERAMENT_STALKING]: \"thor\",\r\n  [TEMPERAMENT_SUBMISSIVE]: \"od\",\r\n  [TEMPERAMENT_TIMID]: \"balder\",\r\n  [TEMPERAMENT_UNCONCERNED]: \"syn\",\r\n  [TEMPERAMENT_UNINTELLIGENT]: \"dellingr\",\r\n  [TEMPERAMENT_UNPREDICTABLE]: \"loki\",\r\n  [TEMPERAMENT_VISCIOUS]: \"hel\",\r\n  [TEMPERAMENT_VIOLENT]: \"rindr\",\r\n  [TEMPERAMENT_VOLATILE]: \"aegir\"\r\n};\r\n\r\nexport const TAXONOMY_ID = \"Odin\";\r\n\r\nexport default {\r\n  spectralClassMap,\r\n  odditiesMap,\r\n  biomeMap,\r\n  sentinelMap,\r\n  faunaMap,\r\n  floraMap,\r\n  temperamentMap\r\n};\r\n","import {\r\n  BIOME_LUSH,\r\n  BIOME_BARREN,\r\n  BIOME_AIRLESS,\r\n  BIOME_EXOTIC,\r\n  BIOME_SCORCHED,\r\n  BIOME_FROZEN,\r\n  BIOME_TOXIC,\r\n  BIOME_IRRADIATED\r\n} from \"./biomes\";\r\nimport {\r\n  TEMPERAMENT_ACTIVE,\r\n  TEMPERAMENT_AMBULATORY,\r\n  TEMPERAMENT_AGGRESIVE,\r\n  TEMPERAMENT_AMENABLE,\r\n  TEMPERAMENT_ANXIOUS,\r\n  TEMPERAMENT_BOLD,\r\n  TEMPERAMENT_CALM,\r\n  TEMPERAMENT_CAUTIOUS,\r\n  TEMPERAMENT_CRUEL,\r\n  TEMPERAMENT_DANGEROUS,\r\n  TEMPERAMENT_DEFENSIVE,\r\n  TEMPERAMENT_DISTINCTIVE,\r\n  TEMPERAMENT_DOCILE,\r\n  TEMPERAMENT_ERRATIC,\r\n  TEMPERAMENT_FEARFUL,\r\n  TEMPERAMENT_HIBERNATOR,\r\n  TEMPERAMENT_HOSTILE,\r\n  TEMPERAMENT_HUNTER,\r\n  TEMPERAMENT_MIGRATORY,\r\n  TEMPERAMENT_PASSIVE,\r\n  TEMPERAMENT_PREDATOR,\r\n  TEMPERAMENT_PREY,\r\n  TEMPERAMENT_SEDATE,\r\n  TEMPERAMENT_SHY,\r\n  TEMPERAMENT_SKITTISH,\r\n  TEMPERAMENT_STALKING,\r\n  TEMPERAMENT_SUBMISSIVE,\r\n  TEMPERAMENT_TIMID,\r\n  TEMPERAMENT_UNCONCERNED,\r\n  TEMPERAMENT_UNINTELLIGENT,\r\n  TEMPERAMENT_UNPREDICTABLE,\r\n  TEMPERAMENT_VISCIOUS,\r\n  TEMPERAMENT_VIOLENT,\r\n  TEMPERAMENT_VOLATILE\r\n} from \"./fauna\";\r\n\r\n// Using Great Old Ones (mostly alphabetically)\r\nconst spectralClassMap = {\r\n  O: {\r\n    0: \"Quyagen\",\r\n    1: \"Quyagen\",\r\n    2: \"Ob'mbu\",\r\n    3: \"Ob'mbu\",\r\n    4: \"Oorn\",\r\n    5: \"Oorn\",\r\n    6: \"Othuum\",\r\n    7: \"Othuum\",\r\n    8: \"Othuyeg\",\r\n    9: \"Othuyeg\"\r\n  },\r\n  B: {\r\n    0: \"Baoht Z'uqqa Mogg\",\r\n    1: \"Baoht Z'uqqa Mogg\",\r\n    2: \"Basatan\",\r\n    3: \"Basatan\",\r\n    4: \"B'gnu Thun\",\r\n    5: \"B'gnu Thun\",\r\n    6: \"Bokrug\",\r\n    7: \"Bokrug\",\r\n    8: \"Bugg Shash\",\r\n    9: \"Bugg Shash\"\r\n  },\r\n  A: {\r\n    0: \"Abholos\",\r\n    1: \"Alala\",\r\n    2: \"Ammutseba\",\r\n    3: \"Amon Gorloth\",\r\n    4: \"Aphoom Zhah\",\r\n    5: \"Arwassa\",\r\n    6: \"Atlach Nacha\",\r\n    7: \"Ayi'ig\",\r\n    8: \"Aylith\",\r\n    9: \"Axtlan\"\r\n  },\r\n  F: {\r\n    0: \"Hastalyk\",\r\n    1: \"Hastalyk\",\r\n    2: \"Hastur\",\r\n    3: \"Hastur\",\r\n    4: \"H'chtelegoth\",\r\n    5: \"H'chtelegoth\",\r\n    6: \"Haiogh Yai\",\r\n    7: \"Haiogh Yai\",\r\n    8: \"Hnarqu\",\r\n    9: \"Hnarqu\"\r\n  },\r\n  G: {\r\n    0: \"Ghadamon\",\r\n    1: \"Ghatanothoa\",\r\n    2: \"Ghisguth\",\r\n    3: \"Gi Hoveg\",\r\n    4: \"Glaaki\",\r\n    5: \"Gleeth\",\r\n    6: \"Gloon\",\r\n    7: \"Gobogeg\",\r\n    8: \"Golothess\",\r\n    9: \"Gtuhanai\"\r\n  },\r\n  K: {\r\n    0: \"Kaalut\",\r\n    1: \"Kag'Naru\",\r\n    2: \"Kassogtha\",\r\n    3: \"Kaunuzoth\",\r\n    4: \"Khal'kru\",\r\n    5: \"Klosmiebhyx\",\r\n    6: \"K'nar'st\",\r\n    7: \"Krang\",\r\n    8: \"Kthaw'keth\",\r\n    9: \"Kurpannga\"\r\n  },\r\n  M: {\r\n    0: \"Mappo\",\r\n    1: \"Mappo\",\r\n    2: \"M'basui\",\r\n    3: \"M'basui\",\r\n    4: \"M'Nagalah\",\r\n    5: \"M'Nagalah\",\r\n    6: \"Mnomquah\",\r\n    7: \"Mnomquah\",\r\n    8: \"Mordiggian\",\r\n    9: \"Mordiggian\"\r\n  },\r\n  L: {\r\n    0: \"Lexur'iga\",\r\n    1: \"Lexur'iga\",\r\n    2: \"Lythalia\",\r\n    3: \"Lythalia\",\r\n    4: \"Xalafu\",\r\n    5: \"Xalafu\",\r\n    6: \"Xcthol\",\r\n    7: \"Xcthol\",\r\n    8: \"Xinlurgash\",\r\n    9: \"Xinlurgash\"\r\n  },\r\n  T: {\r\n    0: \"Thanaroa\",\r\n    1: \"Tharapithia\",\r\n    2: \"Thasaidon\",\r\n    3: \"Th'rygh\",\r\n    4: \"Tsathoggua\",\r\n    5: \"Tulushuggua\",\r\n    6: \"Tulush\",\r\n    7: \"Turua\",\r\n    8: \"Uitzilcapac\",\r\n    9: \"Ut'Ulls Hr'Her\"\r\n  },\r\n  Y: {\r\n    0: \"Yegg Ha\",\r\n    1: \"Y'golonac\",\r\n    2: \"Yhagni\",\r\n    3: \"Yhashtur\",\r\n    4: \"Y'lla\",\r\n    5: \"Yog Sapha\",\r\n    6: \"Yorith\",\r\n    7: \"Ysbaddaden\",\r\n    8: \"Ythogtha\",\r\n    9: \"Yug Siturath\"\r\n  },\r\n  E: {\r\n    0: \"Eihort\",\r\n    1: \"Eihort\",\r\n    2: \"Ei'lor\",\r\n    3: \"Ei'lor\",\r\n    4: \"Etepsed\",\r\n    5: \"Etepsed\",\r\n    6: \"Egnis\",\r\n    7: \"Egnis\",\r\n    8: \"Dhumin\",\r\n    9: \"Dhumin\"\r\n  }\r\n};\r\n\r\n// Same as in Odin's convention\r\nconst odditiesMap = {\r\n  e: \"ei\",\r\n  f: \"ef\",\r\n  h: \"ah\",\r\n  k: \"ak\",\r\n  m: \"im\",\r\n  n: \"in\",\r\n  p: \"op\",\r\n  q: \"oq\",\r\n  s: \"us\",\r\n  v: \"yv\",\r\n  w: \"uw\"\r\n};\r\n\r\n// Using R'Lyehian translations\r\nconst biomeMap = {\r\n  [BIOME_LUSH]: \"ehyeeog\", // Many\r\n  [BIOME_BARREN]: \"ahyog'nglui\", // Empty\r\n  [BIOME_AIRLESS]: \"soth\", // Void\r\n  [BIOME_EXOTIC]: \"r'luh\", // Magic\r\n  [BIOME_SCORCHED]: \"fm'latgh\", // Burn\r\n  [BIOME_FROZEN]: \"mgfm'latghnah\", // Cold\r\n  [BIOME_TOXIC]: \"n'ghanglui\", // Disease\r\n  [BIOME_IRRADIATED]: \"zhro shuggog\" // End of the World\r\n};\r\n\r\n// Using R'Lyehian translations\r\nconst sentinelMap = {\r\n  1: \"ehye\", // None\r\n  2: \"fhtagn\", // Sleeping\r\n  3: \"nafl ehyeeog\", // Not many\r\n  4: \"nafl or'azath\", // Not unusual\r\n  5: \"mgehye'bthnk\", // Attack\r\n  6: \"mg'lloig\" // Insane\r\n};\r\n\r\n// Using Welsh translations\r\nconst faunaMap = {\r\n  1: \"di osgoi\", // Devoid\r\n  2: \"yn fras\", // Sparse\r\n  3: \"cymedrol\", // Moderate\r\n  4: \"uchel\", // High\r\n  5: \"cyfoethog\", // Rich\r\n  6: \"llawn\" // Full\r\n};\r\n\r\n// Using Welsh translations\r\nconst floraMap = {\r\n  1: \"di osgoi\", // Devoid\r\n  2: \"yn fras\", // Sparse\r\n  3: \"cymedrol\", // Moderate\r\n  4: \"uchel\", // High\r\n  5: \"cyfoethog\", // Rich\r\n  6: \"llawn\" // Full\r\n};\r\n\r\n// Using Outer Gods (mostly at random)\r\nconst temperamentMap = {\r\n  [TEMPERAMENT_ACTIVE]: \"Abhoth\",\r\n  [TEMPERAMENT_AMBULATORY]: \"Aletheia\",\r\n  [TEMPERAMENT_AGGRESIVE]: \"C'thalpa\",\r\n  [TEMPERAMENT_AMENABLE]: \"Azhorra-Tha\",\r\n  [TEMPERAMENT_ANXIOUS]: \"Cxaxukluth\",\r\n  [TEMPERAMENT_BOLD]: \"Daoloth\",\r\n  [TEMPERAMENT_CALM]: \"Darkness\",\r\n  [TEMPERAMENT_CAUTIOUS]: \"D’endrrah\",\r\n  [TEMPERAMENT_CRUEL]: \"Ghroth\",\r\n  [TEMPERAMENT_DANGEROUS]: \"Hydra\",\r\n  [TEMPERAMENT_DEFENSIVE]: \"Ialdagorth\",\r\n  [TEMPERAMENT_DISTINCTIVE]: \"Kaajh'Kaalbh\",\r\n  [TEMPERAMENT_DOCILE]: \"Lu Kthu\",\r\n  [TEMPERAMENT_ERRATIC]: \"Mh'ithrha\",\r\n  [TEMPERAMENT_FEARFUL]: \"Mlandoth\",\r\n  [TEMPERAMENT_HIBERNATOR]: \"Ngyr Korath\",\r\n  [TEMPERAMENT_HOSTILE]: \"Nyarlathotep\",\r\n  [TEMPERAMENT_HUNTER]: \"Aiueb Gnshal\",\r\n  [TEMPERAMENT_MIGRATORY]: \"Nyctelios\",\r\n  [TEMPERAMENT_PASSIVE]: \"Ny Rakath\",\r\n  [TEMPERAMENT_PREDATOR]: \"Shabbith Ka\",\r\n  [TEMPERAMENT_PREY]: \"Shub Niggurath\",\r\n  [TEMPERAMENT_SEDATE]: \"Suc'Naath\",\r\n  [TEMPERAMENT_SHY]: \"Tru'nembra\",\r\n  [TEMPERAMENT_SKITTISH]: \"Tulzscha\",\r\n  [TEMPERAMENT_STALKING]: \"Ubbo Sathla\",\r\n  [TEMPERAMENT_SUBMISSIVE]: \"Uvhash\",\r\n  [TEMPERAMENT_TIMID]: \"Xa'ligha\",\r\n  [TEMPERAMENT_UNCONCERNED]: \"Azathoth\",\r\n  [TEMPERAMENT_UNINTELLIGENT]: \"Xexanoth\",\r\n  [TEMPERAMENT_UNPREDICTABLE]: \"Yhoundeh\",\r\n  [TEMPERAMENT_VISCIOUS]: \"Yibb Tstll\",\r\n  [TEMPERAMENT_VIOLENT]: \"Yidhra\",\r\n  [TEMPERAMENT_VOLATILE]: \"Yog Sothoth\"\r\n};\r\n\r\nexport const TAXONOMY_ID = \"Antediluvian\";\r\n\r\nexport default {\r\n  spectralClassMap,\r\n  odditiesMap,\r\n  biomeMap,\r\n  sentinelMap,\r\n  faunaMap,\r\n  floraMap,\r\n  temperamentMap\r\n};\r\n","import { get } from \"lodash\";\r\n\r\nimport odinTaxonomy, { TAXONOMY_ID as ODIN_TAXONOMY_ID } from \"./odinTaxonomy\";\r\nimport antediluvianTaxonomy, {\r\n  TAXONOMY_ID as ANTEDILUVIAN_TAXONOMY_ID\r\n} from \"./antediluvianTaxonomy\";\r\n\r\nexport const AVAILABLE_TAXONOMIES = {\r\n  [ODIN_TAXONOMY_ID]: odinTaxonomy,\r\n  [ANTEDILUVIAN_TAXONOMY_ID]: antediluvianTaxonomy\r\n};\r\n\r\nexport const DEFAULT_TAXONOMY_ID = ODIN_TAXONOMY_ID;\r\n\r\nexport const getTaxonomy = taxonomyId => {\r\n  const taxonomy = get(AVAILABLE_TAXONOMIES, taxonomyId);\r\n  if (!taxonomy) {\r\n    throw new Error(`Taxonomy ${taxonomyId} is not defined`);\r\n  }\r\n\r\n  return taxonomy;\r\n};\r\n","import { DEFAULT_TAXONOMY_ID } from \"../taxonomies\";\r\nimport { DEFAULT_GENUS, DEFAULT_TEMPERAMENT } from \"../taxonomies/fauna\";\r\n\r\nexport const defaults = {\r\n  preferences: {\r\n    __typename: \"Preferences\",\r\n    taxonomyId: DEFAULT_TAXONOMY_ID\r\n  },\r\n  systemDetails: {\r\n    __typename: \"SystemDetails\",\r\n    regionName: \"\",\r\n    spectralClass: \"\",\r\n    distanceFromCenter: 0\r\n  },\r\n  planetDetails: {\r\n    __typename: \"PlanetDetails\",\r\n    biome: \"Lush\",\r\n    sentinels: 1,\r\n    fauna: 1,\r\n    flora: 1,\r\n    isMoon: false\r\n  },\r\n  faunaDetails: {\r\n    __typename: \"FaunaDetails\",\r\n    genus: DEFAULT_GENUS,\r\n    temperament: DEFAULT_TEMPERAMENT\r\n  },\r\n  floraDetails: {\r\n    __typename: \"FloraDetails\",\r\n    genus: null\r\n  },\r\n  waypointDetails: {\r\n    __typename: \"WaypointDetails\",\r\n    structure: null\r\n  }\r\n};\r\n\r\nexport const typeDefs = `\r\n  type Preferences {\r\n    taxonomyId: String!\r\n  }\r\n\r\n  type SystemDetails {\r\n    regionName: String!\r\n    spectralClass: String!\r\n    distanceFromCenter: Int!\r\n  }\r\n\r\n  type PlanetDetails {\r\n    biome: String!\r\n    sentinels: Int!\r\n    fauna: Int!\r\n    flora: Int!\r\n    isMoon: Boolean!\r\n  }\r\n\r\n  type FaunaDetails {\r\n    genus: String\r\n    temperament: String\r\n  }\r\n\r\n  type FloraDetails {\r\n    genus: String\r\n  }\r\n\r\n  type WaypointDetails {\r\n    structure: String\r\n  }\r\n\r\n  type Query {\r\n    preferences: Preferences!\r\n    systemDetails: SystemDetails!\r\n    planetDetails: PlanetDetails!\r\n    faunaDetails: FaunaDetails!\r\n    floraDetails: FloraDetails!\r\n    waypointDetails: WaypointDetails!\r\n  }\r\n`;\r\n\r\nexport const resolvers = {};\r\n","import React from \"react\";\r\n\r\nimport { Col, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nimport { map } from \"lodash\";\r\n\r\nconst SelectInput = ({ controlId, label, options, value, onChange }) => (\r\n  <FormGroup controlId={controlId}>\r\n    <Col componentClass={ControlLabel} xs={4}>\r\n      {label}\r\n    </Col>\r\n    <Col xs={8}>\r\n      <FormControl componentClass=\"select\" value={value} onChange={onChange}>\r\n        {map(options, option => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </FormControl>\r\n    </Col>\r\n  </FormGroup>\r\n);\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport SelectInput from \"../Input/SelectInput\";\r\n\r\nimport { curry } from \"lodash\";\r\nimport { AVAILABLE_TAXONOMIES } from \"../../taxonomies\";\r\n\r\nconst handleFieldChange = curry((update, field, e) =>\r\n  update({\r\n    [field]: e.target.value\r\n  })\r\n);\r\n\r\nconst PreferencesForm = ({ update, taxonomyId }) => (\r\n  <Form>\r\n    <SelectInput\r\n      controlId=\"taxonomyId\"\r\n      label=\"Taxonomy\"\r\n      options={Object.keys(AVAILABLE_TAXONOMIES)}\r\n      value={taxonomyId}\r\n      onChange={handleFieldChange(update, \"taxonomyId\")}\r\n    />\r\n  </Form>\r\n);\r\n\r\nexport default PreferencesForm;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { curry } from \"lodash\";\r\n\r\nimport { Query } from \"react-apollo\";\r\nimport { Panel } from \"react-bootstrap\";\r\nimport PreferencesForm from \"./PreferencesForm\";\r\n\r\nconst PREFERENCES_QUERY = gql`\r\n  {\r\n    preferences @client {\r\n      taxonomyId\r\n    }\r\n  }\r\n`;\r\n\r\nconst updatePreferences = curry((client, value) =>\r\n  client.writeData({\r\n    data: {\r\n      preferences: {\r\n        __typename: \"Preferences\",\r\n        ...value\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst renderPanel = (client, { taxonomyId }) => (\r\n  <Panel bsStyle=\"primary\">\r\n    <Panel.Heading>Preferences</Panel.Heading>\r\n    <Panel.Body>\r\n      <PreferencesForm\r\n        taxonomyId={taxonomyId}\r\n        update={updatePreferences(client)}\r\n      />\r\n    </Panel.Body>\r\n  </Panel>\r\n);\r\n\r\nconst PreferencesPanel = () => (\r\n  <Query query={PREFERENCES_QUERY}>\r\n    {({ data: { preferences, systemDetails }, client, loading, error }) => {\r\n      if (loading) {\r\n        return \"Loading...\";\r\n      } else if (error) {\r\n        return \"Error!\";\r\n      }\r\n\r\n      return renderPanel(client, preferences, systemDetails);\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default PreferencesPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  InputGroup,\r\n  ControlLabel\r\n} from \"react-bootstrap\";\r\n\r\nimport { curry } from \"lodash\";\r\n\r\nconst handleFieldChange = curry((update, field, e) =>\r\n  update({\r\n    [field]: e.target.value\r\n  })\r\n);\r\n\r\nclass SystemDetailsForm extends Component {\r\n  render() {\r\n    const {\r\n      update,\r\n      regionName,\r\n      spectralClass,\r\n      distanceFromCenter\r\n    } = this.props;\r\n    return (\r\n      <Form horizontal>\r\n        <FormGroup controlId=\"regionName\">\r\n          <Col componentClass={ControlLabel} xs={3}>\r\n            Region name\r\n          </Col>\r\n          <Col xs={9}>\r\n            <FormControl\r\n              type=\"text\"\r\n              value={regionName}\r\n              placeholder=\"ex. Toswati Instability\"\r\n              onChange={handleFieldChange(update, \"regionName\")}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup controlId=\"spectralClass\">\r\n          <Col componentClass={ControlLabel} xs={3}>\r\n            Spectral class\r\n          </Col>\r\n          <Col xs={9}>\r\n            <FormControl\r\n              type=\"text\"\r\n              value={spectralClass}\r\n              placeholder=\"ex. F5p\"\r\n              onChange={handleFieldChange(update, \"spectralClass\")}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup controlId=\"distanceFromCenter\">\r\n          <Col componentClass={ControlLabel} xs={3}>\r\n            Distance\r\n          </Col>\r\n          <Col xs={9}>\r\n            <InputGroup>\r\n              <InputGroup.Addon>ly</InputGroup.Addon>\r\n              <FormControl\r\n                type=\"text\"\r\n                value={distanceFromCenter}\r\n                onChange={handleFieldChange(update, \"distanceFromCenter\")}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SystemDetailsForm;\r\n","import {\r\n  curry,\r\n  flow,\r\n  identity,\r\n  get,\r\n  filter,\r\n  map,\r\n  reduce,\r\n  flattenDepth,\r\n  uniq,\r\n  split,\r\n  toLower\r\n} from \"lodash\";\r\nimport isVowel from \"is-vowel\";\r\nimport combinations from \"combinations\";\r\nimport random from \"random-seed\";\r\n\r\nconst isFirstWord = wordIndex => wordIndex === 0;\r\n\r\nconst isMiddleWord = (words, wordIndex) =>\r\n  !isFirstWord(wordIndex) && !isLastWord(words, wordIndex);\r\n\r\nconst isLastWord = (words, wordIndex) => wordIndex === words.length - 1;\r\n\r\nconst toCharacterList = word => split(word, \"\");\r\n\r\nconst filterCloseToStart = indexList => filter(indexList, index => index >= 2);\r\n\r\nconst filterCloseToEnd = curry((word, indexList) =>\r\n  filter(indexList, index => index < word.length - 2)\r\n);\r\n\r\nconst appendIfVowel = (vowelList, character, index) => [\r\n  ...vowelList,\r\n  ...(isVowel(character) ? [index] : [])\r\n];\r\n\r\nconst findVowelList = characterList => reduce(characterList, appendIfVowel, []);\r\n\r\nconst findPossibleBreakpointLists = flow(\r\n  toCharacterList,\r\n  findVowelList\r\n);\r\n\r\nconst findValidBreakpointLists = (word, wordIndex, wordList) =>\r\n  flow(\r\n    findPossibleBreakpointLists,\r\n    isFirstWord(wordIndex) ? filterCloseToStart : identity,\r\n    isLastWord(wordList, wordIndex) ? filterCloseToEnd(word) : identity\r\n  )(word);\r\n\r\nconst generateWordPartListForMiddleWord = flow(\r\n  combinations,\r\n  combinationList =>\r\n    filter(combinationList, combination => combination.length <= 2),\r\n  filteredCombinationList =>\r\n    map(filteredCombinationList, combination => {\r\n      const combinationStart = get(combination, 0, 0);\r\n      return [combinationStart, get(combination, 1, combinationStart)];\r\n    })\r\n);\r\n\r\nconst generateWordPartLists = breakpointLists =>\r\n  map(breakpointLists, (breakpointList, breakpointListIndex) => {\r\n    if (isFirstWord(breakpointListIndex)) {\r\n      return map(breakpointList, breakpoint => [0, breakpoint]);\r\n    } else if (isMiddleWord(breakpointLists, breakpointListIndex)) {\r\n      return generateWordPartListForMiddleWord(breakpointList);\r\n    } else {\r\n      return map(breakpointList, breakpoint => [breakpoint, Infinity]);\r\n    }\r\n  });\r\n\r\nconst generateCombinationListNested = (\r\n  [list, ...otherLists],\r\n  combination = []\r\n) =>\r\n  list\r\n    ? map(list, breakpoint =>\r\n        generateCombinationListNested(otherLists, [...combination, breakpoint])\r\n      )\r\n    : combination;\r\n\r\nconst generateCombinationList = lists => {\r\n  const combinationListNested = generateCombinationListNested(lists);\r\n  return flattenDepth(combinationListNested, lists.length - 1);\r\n};\r\n\r\nconst appendToPortmanteau = curry(\r\n  (\r\n    wordList,\r\n    portmanteau,\r\n    [wordPartStartIndex, wordPartEndIndex],\r\n    wordIndex\r\n  ) => {\r\n    const word = wordList[wordIndex];\r\n    const wordPart = word.substring(wordPartStartIndex, wordPartEndIndex);\r\n\r\n    return `${portmanteau}${wordPart}`;\r\n  }\r\n);\r\n\r\nconst appendTrimmedWord = (wordList, word) => [\r\n  ...wordList,\r\n  ...split(word, /\\s/g)\r\n];\r\n\r\nexport const generatePortmanteauList = wordList => {\r\n  const wordListPrepared = map(\r\n    reduce(wordList, appendTrimmedWord, []),\r\n    toLower\r\n  );\r\n\r\n  const breakpointLists = map(\r\n    map(wordListPrepared, findValidBreakpointLists),\r\n    breakpointList => (breakpointList.length === 0 ? [1] : breakpointList)\r\n  );\r\n\r\n  const wordPartLists = generateWordPartLists(breakpointLists);\r\n  const wordPartCombinationList = generateCombinationList(wordPartLists);\r\n  const portmanteauList = map(wordPartCombinationList, wordPartCombination =>\r\n    reduce(wordPartCombination, appendToPortmanteau(wordListPrepared), \"\")\r\n  );\r\n\r\n  return uniq(portmanteauList);\r\n};\r\n\r\nexport const generatePortmanteau = (wordList, seed = null) => {\r\n  const randomGenerator = seed !== null ? random.create(seed) : random.create();\r\n  const portmanteauList = generatePortmanteauList(wordList);\r\n  const portmanteauIndex = randomGenerator.range(portmanteauList.length);\r\n\r\n  return portmanteauList[portmanteauIndex];\r\n};\r\n","import { get, map, filter, upperFirst, split, join } from \"lodash\";\r\nimport { generatePortmanteau } from \"./portmanteauHelper\";\r\n\r\nconst SPECTRAL_CLASS_REGEXP = /^([OBAFGKMLTYE]{1})([0-9]{1})([efhkmnpqsvw]{0,2})$/;\r\n\r\nconst parseSpectralClass = spectralClass => {\r\n  if (!SPECTRAL_CLASS_REGEXP.test(spectralClass)) {\r\n    throw new Error(`Cannot parse invalid spectral class \"${spectralClass}\"`);\r\n  }\r\n\r\n  const [, starClass, starTemperature, oddities] = SPECTRAL_CLASS_REGEXP.exec(\r\n    spectralClass\r\n  );\r\n\r\n  return {\r\n    starClass,\r\n    starTemperature,\r\n    oddities\r\n  };\r\n};\r\n\r\nexport const validateSystemDetails = (\r\n  taxonomy,\r\n  { regionName, spectralClass }\r\n) => {\r\n  const validRegionName = validateRegionName(regionName);\r\n  const validSpectralClass = validateSpectralClass(taxonomy, spectralClass);\r\n\r\n  return validRegionName && validSpectralClass;\r\n};\r\n\r\nexport const validateRegionName = regionName => regionName.length > 2;\r\n\r\nexport const validateSpectralClass = (\r\n  { spectralClassMap, odditiesMap },\r\n  spectralClass\r\n) => {\r\n  if (!SPECTRAL_CLASS_REGEXP.test(spectralClass)) {\r\n    return false;\r\n  }\r\n\r\n  const { starClass, starTemperature, oddities } = parseSpectralClass(\r\n    spectralClass\r\n  );\r\n\r\n  const isClassValid =\r\n    get(spectralClassMap, [starClass, starTemperature], null) !== null;\r\n\r\n  const validOddities = filter(\r\n    split(oddities, \"\"),\r\n    oddity => get(odditiesMap, oddity, null) !== null\r\n  );\r\n  const areOdditiesValid = validOddities.length === oddities.length;\r\n\r\n  return isClassValid && areOdditiesValid;\r\n};\r\n\r\nexport const generateSystemNameShort = (\r\n  { spectralClassMap },\r\n  { regionName, spectralClass, distanceFromCenter }\r\n) => {\r\n  const { starClass, starTemperature } = parseSpectralClass(spectralClass);\r\n\r\n  const classMappedTo = get(spectralClassMap, [starClass, starTemperature]);\r\n  const nameShort = generatePortmanteau(\r\n    [regionName, classMappedTo],\r\n    distanceFromCenter\r\n  );\r\n\r\n  return upperFirst(nameShort);\r\n};\r\n\r\nexport const generateSystemName = (taxonomy, systemDetails) => {\r\n  const { odditiesMap } = taxonomy;\r\n  const { spectralClass } = systemDetails;\r\n  const { oddities } = parseSpectralClass(spectralClass);\r\n\r\n  const nameShort = generateSystemNameShort(taxonomy, systemDetails);\r\n  const oddityNameParts = map(split(oddities, \"\"), oddity =>\r\n    get(odditiesMap, oddity)\r\n  );\r\n\r\n  return join(map([nameShort, ...oddityNameParts], upperFirst), \"-\");\r\n};\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Panel } from \"react-bootstrap\";\r\nimport SystemDetailsForm from \"./SystemDetailsForm\";\r\n\r\nimport { curry } from \"lodash\";\r\nimport { getTaxonomy } from \"../../taxonomies\";\r\nimport {\r\n  validateSystemDetails,\r\n  generateSystemName\r\n} from \"../../helpers/systemDetailsHelper\";\r\n\r\nconst SYSTEM_DETAILS_QUERY = gql`\r\n  {\r\n    preferences @client {\r\n      taxonomyId\r\n    }\r\n    systemDetails @client {\r\n      regionName\r\n      spectralClass\r\n      distanceFromCenter\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateSystemDetails = curry((client, value) =>\r\n  client.writeData({\r\n    data: {\r\n      systemDetails: {\r\n        __typename: \"SystemDetails\",\r\n        ...value\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst renderPanel = (client, { taxonomyId }, systemDetails) => {\r\n  const taxonomy = getTaxonomy(taxonomyId);\r\n  const isValid = validateSystemDetails(taxonomy, systemDetails);\r\n  return (\r\n    <Panel bsStyle={isValid ? \"success\" : \"warning\"}>\r\n      <Panel.Heading>System</Panel.Heading>\r\n      <Panel.Body>\r\n        <SystemDetailsForm\r\n          {...systemDetails}\r\n          update={updateSystemDetails(client)}\r\n        />\r\n      </Panel.Body>\r\n      <Panel.Footer>\r\n        {isValid\r\n          ? generateSystemName(taxonomy, systemDetails)\r\n          : \"Cannot generate name using supplied information\"}\r\n      </Panel.Footer>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nconst SystemDetailsPanel = () => (\r\n  <Query query={SYSTEM_DETAILS_QUERY}>\r\n    {({ data: { preferences, systemDetails }, client, loading, error }) => {\r\n      if (loading) {\r\n        return \"Loading...\";\r\n      } else if (error) {\r\n        return \"Error!\";\r\n      }\r\n\r\n      return renderPanel(client, preferences, systemDetails);\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default SystemDetailsPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Col, Form, FormGroup, ControlLabel, Checkbox } from \"react-bootstrap\";\r\nimport SelectInput from \"../Input/SelectInput\";\r\n\r\nimport { curry } from \"lodash\";\r\nimport BIOMES from \"../../taxonomies/biomes\";\r\n\r\nconst handleFieldChange = curry((update, field, e) =>\r\n  update({\r\n    [field]: e.target.value\r\n  })\r\n);\r\n\r\nconst handleCheckboxChange = curry((update, field, e) =>\r\n  update({\r\n    [field]: e.target.checked\r\n  })\r\n);\r\n\r\nclass PlanetDetailsForm extends Component {\r\n  render() {\r\n    const { update, biome, sentinels, fauna, flora, isMoon } = this.props;\r\n    const levels = [1, 2, 3, 4, 5, 6];\r\n    return (\r\n      <Form horizontal>\r\n        <SelectInput\r\n          controlId=\"biome\"\r\n          label=\"Biome\"\r\n          options={BIOMES}\r\n          value={biome}\r\n          onChange={handleFieldChange(update, \"biome\")}\r\n        />\r\n        <SelectInput\r\n          controlId=\"sentinels\"\r\n          label=\"Sentinels\"\r\n          options={levels}\r\n          value={sentinels}\r\n          onChange={handleFieldChange(update, \"sentinels\")}\r\n        />\r\n        <SelectInput\r\n          controlId=\"fauna\"\r\n          label=\"Fauna\"\r\n          options={levels}\r\n          value={fauna}\r\n          onChange={handleFieldChange(update, \"fauna\")}\r\n        />\r\n        <SelectInput\r\n          controlId=\"flora\"\r\n          label=\"Flora\"\r\n          options={levels}\r\n          value={flora}\r\n          onChange={handleFieldChange(update, \"flora\")}\r\n        />\r\n        <FormGroup controlId=\"isMoon\">\r\n          <Col componentClass={ControlLabel} xs={4}>\r\n            Moon\r\n          </Col>\r\n          <Col xs={8}>\r\n            <Checkbox\r\n              checked={isMoon}\r\n              onChange={handleCheckboxChange(update, \"isMoon\")}\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlanetDetailsForm;\r\n","import { get, map, upperFirst, join } from \"lodash\";\r\nimport { generateSystemNameShort } from \"./systemDetailsHelper\";\r\nimport { generatePortmanteau } from \"./portmanteauHelper\";\r\n\r\nexport const validatePlanetDetails = (\r\n  { biomeMap, sentinelMap, faunaMap, floraMap },\r\n  { biome, sentinels, fauna, flora }\r\n) => {\r\n  const isBiomeMapped = get(biomeMap, biome, null) !== null;\r\n  const isSentinelsMapped = get(sentinelMap, sentinels, null) !== null;\r\n  const isFaunaMapped = get(faunaMap, fauna, null) !== null;\r\n  const isFloraMapped = get(floraMap, flora, null) !== null;\r\n\r\n  return isBiomeMapped && isSentinelsMapped && isFaunaMapped && isFloraMapped;\r\n};\r\n\r\nexport const generatePlanetNameShort = (taxonomy, systemDetails, { biome }) => {\r\n  const { biomeMap } = taxonomy;\r\n  const { distanceFromCenter } = systemDetails;\r\n\r\n  const systemName = generateSystemNameShort(taxonomy, systemDetails);\r\n  const biomeName = get(biomeMap, biome);\r\n  const nameShort = generatePortmanteau(\r\n    [systemName, biomeName],\r\n    distanceFromCenter\r\n  );\r\n\r\n  return nameShort;\r\n};\r\n\r\nexport const generatePlanetName = (taxonomy, systemDetails, planetDetails) => {\r\n  const { sentinelMap, faunaMap, floraMap } = taxonomy;\r\n  const { distanceFromCenter } = systemDetails;\r\n  const { sentinels, fauna, flora, isMoon } = planetDetails;\r\n\r\n  const nameShort = generatePlanetNameShort(\r\n    taxonomy,\r\n    systemDetails,\r\n    planetDetails\r\n  );\r\n\r\n  const planetNameOtherPart = generatePortmanteau(\r\n    [get(sentinelMap, sentinels), get(faunaMap, fauna), get(floraMap, flora)],\r\n    distanceFromCenter\r\n  );\r\n\r\n  const isMoonNamePart = isMoon ? [\"M\"] : [];\r\n\r\n  return join(\r\n    map([nameShort, planetNameOtherPart, ...isMoonNamePart], upperFirst),\r\n    \"-\"\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Panel } from \"react-bootstrap\";\r\nimport PlanetDetailsForm from \"./PlanetDetailsForm\";\r\n\r\nimport { curry } from \"lodash\";\r\nimport { getTaxonomy } from \"../../taxonomies\";\r\nimport { validateSystemDetails } from \"../../helpers/systemDetailsHelper\";\r\nimport {\r\n  validatePlanetDetails,\r\n  generatePlanetName\r\n} from \"../../helpers/planetDetailsHelper\";\r\n\r\nconst PLANET_DETAILS_QUERY = gql`\r\n  {\r\n    preferences @client {\r\n      taxonomyId\r\n    }\r\n    systemDetails @client {\r\n      regionName\r\n      spectralClass\r\n      distanceFromCenter\r\n    }\r\n    planetDetails @client {\r\n      biome\r\n      sentinels\r\n      fauna\r\n      flora\r\n      isMoon\r\n    }\r\n  }\r\n`;\r\n\r\nconst updatePlanetDetails = curry((client, value) =>\r\n  client.writeData({\r\n    data: {\r\n      planetDetails: {\r\n        __typename: \"SystemDetails\",\r\n        ...value\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst renderPanel = (client, { taxonomyId }, systemDetails, planetDetails) => {\r\n  const taxonomy = getTaxonomy(taxonomyId);\r\n  const isValid =\r\n    validateSystemDetails(taxonomy, systemDetails) &&\r\n    validatePlanetDetails(taxonomy, planetDetails);\r\n  return (\r\n    <Panel bsStyle={isValid ? \"success\" : \"warning\"}>\r\n      <Panel.Heading>Planet</Panel.Heading>\r\n      <Panel.Body>\r\n        <PlanetDetailsForm\r\n          {...planetDetails}\r\n          update={updatePlanetDetails(client)}\r\n        />\r\n      </Panel.Body>\r\n      <Panel.Footer>\r\n        {isValid\r\n          ? generatePlanetName(taxonomy, systemDetails, planetDetails)\r\n          : \"Cannot generate name using supplied information\"}\r\n      </Panel.Footer>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nconst PlanetDetailsPanel = () => (\r\n  <Query query={PLANET_DETAILS_QUERY}>\r\n    {({\r\n      data: { preferences, systemDetails, planetDetails },\r\n      client,\r\n      loading,\r\n      error\r\n    }) => {\r\n      if (loading) {\r\n        return \"Loading...\";\r\n      } else if (error) {\r\n        return \"Error!\";\r\n      }\r\n\r\n      return renderPanel(client, preferences, systemDetails, planetDetails);\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default PlanetDetailsPanel;\r\n","import React from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport SelectInput from \"../Input/SelectInput\";\r\n\r\nimport { curry } from \"lodash\";\r\nimport {\r\n  AVAILABLE_GENUS_LIST,\r\n  AVAILABLE_TEMPERAMENT_LIST\r\n} from \"../../taxonomies/fauna\";\r\n\r\nconst handleFieldChange = curry((update, field, e) =>\r\n  update({\r\n    [field]: e.target.value\r\n  })\r\n);\r\n\r\nconst FaunaDetailsForm = ({ update, genus, temperament }) => (\r\n  <Form horizontal>\r\n    <SelectInput\r\n      controlId=\"genus\"\r\n      label=\"Genus\"\r\n      options={AVAILABLE_GENUS_LIST}\r\n      value={genus}\r\n      onChange={handleFieldChange(update, \"genus\")}\r\n    />\r\n    <SelectInput\r\n      controlId=\"temperament\"\r\n      label=\"Temperament\"\r\n      options={AVAILABLE_TEMPERAMENT_LIST}\r\n      value={temperament}\r\n      onChange={handleFieldChange(update, \"temperament\")}\r\n    />\r\n  </Form>\r\n);\r\n\r\nexport default FaunaDetailsForm;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Panel } from \"react-bootstrap\";\r\nimport FaunaDetailsForm from \"./FaunaDetailsForm\";\r\n\r\nimport { curry } from \"lodash\";\r\nimport { getTaxonomy } from \"../../taxonomies\";\r\nimport { validateSystemDetails } from \"../../helpers/systemDetailsHelper\";\r\nimport { validatePlanetDetails } from \"../../helpers/planetDetailsHelper\";\r\nimport {\r\n  validateFaunaDetails,\r\n  generateFaunaName\r\n} from \"../../helpers/faunaDetailsHelper\";\r\n\r\nconst FAUNA_DETAILS_QUERY = gql`\r\n  {\r\n    preferences @client {\r\n      taxonomyId\r\n    }\r\n    systemDetails @client {\r\n      regionName\r\n      spectralClass\r\n      distanceFromCenter\r\n    }\r\n    planetDetails @client {\r\n      biome\r\n      sentinels\r\n      fauna\r\n      flora\r\n      isMoon\r\n    }\r\n    faunaDetails @client {\r\n      genus\r\n      temperament\r\n    }\r\n  }\r\n`;\r\n\r\nconst updateFaunaDetails = curry((client, value) =>\r\n  client.writeData({\r\n    data: {\r\n      faunaDetails: {\r\n        __typename: \"FaunaDetails\",\r\n        ...value\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst renderPanel = (\r\n  client,\r\n  { taxonomyId },\r\n  systemDetails,\r\n  planetDetails,\r\n  faunaDetails\r\n) => {\r\n  const taxonomy = getTaxonomy(taxonomyId);\r\n  const isValid =\r\n    validateSystemDetails(taxonomy, systemDetails) &&\r\n    validatePlanetDetails(taxonomy, planetDetails) &&\r\n    validateFaunaDetails(taxonomy, faunaDetails);\r\n  return (\r\n    <Panel bsStyle={isValid ? \"success\" : \"warning\"}>\r\n      <Panel.Heading>Fauna</Panel.Heading>\r\n      <Panel.Body>\r\n        <FaunaDetailsForm\r\n          {...faunaDetails}\r\n          update={updateFaunaDetails(client)}\r\n        />\r\n      </Panel.Body>\r\n      <Panel.Footer>\r\n        {isValid\r\n          ? generateFaunaName(\r\n              taxonomy,\r\n              systemDetails,\r\n              planetDetails,\r\n              faunaDetails\r\n            )\r\n          : \"Cannot generate name using supplied information\"}\r\n      </Panel.Footer>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nconst FaunaDetailsPanel = () => (\r\n  <Query query={FAUNA_DETAILS_QUERY}>\r\n    {({\r\n      data: { preferences, systemDetails, planetDetails, faunaDetails },\r\n      client,\r\n      loading,\r\n      error\r\n    }) => {\r\n      if (loading) {\r\n        return \"Loading...\";\r\n      } else if (error) {\r\n        return \"Error!\";\r\n      }\r\n\r\n      return renderPanel(\r\n        client,\r\n        preferences,\r\n        systemDetails,\r\n        planetDetails,\r\n        faunaDetails\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default FaunaDetailsPanel;\r\n","import { get, map, upperFirst, join, indexOf } from \"lodash\";\r\nimport { generatePlanetNameShort } from \"./planetDetailsHelper\";\r\n\r\nimport { AVAILABLE_GENUS_LIST } from \"../taxonomies/fauna\";\r\n\r\nexport const validateFaunaDetails = (\r\n  { temperamentMap },\r\n  { genus, temperament }\r\n) => {\r\n  const isGenusAvailable = indexOf(AVAILABLE_GENUS_LIST, genus) >= 0;\r\n  const isTemperamentMapped = get(temperamentMap, temperament, null) !== null;\r\n\r\n  return isGenusAvailable && isTemperamentMapped;\r\n};\r\n\r\nexport const generateFaunaName = (\r\n  taxonomy,\r\n  systemDetails,\r\n  planetDetails,\r\n  { genus, temperament }\r\n) => {\r\n  const { temperamentMap } = taxonomy;\r\n\r\n  const planetName = generatePlanetNameShort(\r\n    taxonomy,\r\n    systemDetails,\r\n    planetDetails\r\n  );\r\n\r\n  const temperamentName = get(temperamentMap, temperament);\r\n\r\n  return join(map([planetName, genus, temperamentName], upperFirst), \"-\");\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Jumbotron, Grid, Row, Col } from \"react-bootstrap\";\r\nimport PreferencesPanel from \"./Preferences/PreferencesPanel\";\r\nimport SystemDetailsPanel from \"./SystemDetails/SystemDetailsPanel\";\r\nimport PlanetDetailsPanel from \"./PlanetDetails/PlanetDetailsPanel\";\r\nimport FaunaDetailsPanel from \"./FaunaDetails/FaunaDetailsPanel\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Jumbotron>\r\n      <Grid>\r\n        <Col md={12}>\r\n          <h2>No Man's Sky Taxonomy</h2>\r\n        </Col>\r\n        <Col md={12}>\r\n          <h6>\r\n            Created by{\" \"}\r\n            <a\r\n              href=\"https://github.com/Mutisz\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              Mutisz\r\n            </a>\r\n            , based on{\" \"}\r\n            <a\r\n              href=\"https://www.odingaming.com/2018/01/15/no-mans-sky-naming-convention/\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              Odin's Convention\r\n            </a>\r\n          </h6>\r\n        </Col>\r\n      </Grid>\r\n    </Jumbotron>\r\n    <Grid>\r\n      <Row className=\"show-grid\">\r\n        <Col md={12}>\r\n          <PreferencesPanel />\r\n        </Col>\r\n        <Col md={6} lg={4}>\r\n          <SystemDetailsPanel />\r\n        </Col>\r\n        <Col md={6} lg={4}>\r\n          <PlanetDetailsPanel />\r\n        </Col>\r\n        <Col md={6} lg={4}>\r\n          <FaunaDetailsPanel />\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { register as registerServiceWorker } from \"./serviceWorker\";\n\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { persistCache } from \"apollo-cache-persist\";\nimport { withClientState } from \"apollo-link-state\";\nimport { defaults, typeDefs, resolvers } from \"./schema\";\n\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"./components/App\";\n\nconst cache = new InMemoryCache();\nconst storage = window.localStorage;\n\nconst createClient = () =>\n  new ApolloClient({\n    cache,\n    link: withClientState({ defaults, typeDefs, resolvers })\n  });\n\nconst renderApp = () => {\n  render(\n    <ApolloProvider client={createClient()}>\n      <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n  );\n\n  registerServiceWorker();\n};\n\npersistCache({\n  cache: cache,\n  storage: storage\n})\n  .then(renderApp)\n  .catch(error => console.error(error));\n"],"sourceRoot":""}